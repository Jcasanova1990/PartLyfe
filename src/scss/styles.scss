:root {
  --tan-1: #000000;
  --tan-2: #257500; 
  --tan-3: #968c84; 
  --tan-4: #88c93e; 
  --orange: #000000;
  --text-light: #52a027;
  --text-light2:#ffffff;
  --text-dark: #968c84;
  --white: #f8fffc;
  --trans: #ffffff00;
}

*, *:before, *:after {
  box-sizing: border-box;
}

html {
  display: flex;
  flex-direction: column;
  justify-content: center; 
  align-items: center; 
  background-image: url('https://static.vecteezy.com/system/resources/previews/024/066/710/large_2x/green-power-close-up-of-processor-motherboard-with-green-leaves-ai-generated-free-photo.jpg');
  background-size: cover;
  background-position: center;
  height: 100%;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
  'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
  sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  padding: 1vmin; /* Adjusted padding */
  height: 100vh;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

#root {
  display: flex;
  flex-direction: column;
  justify-content: center; 
  align-items: center; 
}

.align-ctr {
  text-align: center;
}

.align-rt {
  text-align: right;
}

.smaller {
  font-size: smaller;
}

.flex-ctr-ctr {
  display: flex;
  justify-content: center;
  align-items: center;
}
.flex-ctr-ctr img {
  width: 55px;
  height: auto;
}

.flex-col {
  flex-direction: column;
}

.flex-j-end {
  justify-content: flex-end;
}

.scroll-y {
  overflow-y: scroll;
}

*::-webkit-scrollbar {
  width: 5px; /* Width of the scrollbar */
  border-radius: 90px
}

*::-webkit-scrollbar-track {
  background: rgba(255, 0, 0, 0); /* Color of the track */
  border-radius: 90px
}

*::-webkit-scrollbar-thumb {
  background: var(--tan-4); /* Color of the thumb */
  border-radius: 9px; /* Rounded corners of the thumb */
}

.filterInput:focus + .menuList {
  min-width: 100%;
  overflow-y: auto;
  -webkit-min-width: 100%; /* For WebKit browsers */
}

.section-heading {
  display: flex;
  justify-content: space-around;
  align-items: center;
  background-color: var(--tan-1);
  color: var(--text-dark);
  border-radius: 1vmin;
  padding: .3vmin; /* Adjusted padding */
  text-align: center;
  font-size: 1.5vmin; /* Adjusted font size */
}
.MenuList {
  width: 50%;
  font-size: 0.5em;
  // Add any other necessary styles
}
img {
  max-width: 100%;
  margin-bottom: 1vmin; /* Adjusted margin */
}

.Logo{
  width: 40%; /* Adjusted width */
}

.form-container {
  padding: 1.5vmin; /* Adjusted padding */
  background-color: var(--trans);
  border-radius: 1vmin;
  width: 500px ;
}

p.error-message {
  color: var(--orange);
  text-align: center;
  font-size: 1.5vmin; /* Adjusted font size */
}

form {
  width: 500px;
  display: grid;
  grid-template-columns: 1fr 3fr;
  gap: 0.625vmin; /* Adjusted gap */
  color: var(--text-light);
  margin: 0 auto; /* Center horizontally */
}

label {
  color: #f8fffc;
  font-size: 1.5vmin; /* Adjusted font size */
  display: flex;
  align-items: center;
}

input {
  padding: 0.5vmin; /* Adjusted padding */
  font-size: 1.5vmin; /* Adjusted font size */
  color: var(--text-dark);
  background-image: none !important;
  outline: none;
}

input:focus {
  border-color: var(--orange); /* You can remove this line if you don't want any focus border */
}


button,
a.button,
button.btn-sm,
button.btn-xs {
  margin: 1vmin;
  padding: 2vmin; /* Kept padding for buttons unchanged */
  color: var(--white);
  background-color: var(--orange);
  font-size: 2vmin; /* Kept font size for buttons unchanged */
  font-weight: bold;
  text-decoration: none;
  text-align: center;
  border-radius: 1vmin; /* Adjusted border-radius for square with curve */
  outline: none;
  cursor: pointer;
  transition: background-color 0.3s ease; /* Added transition property */
  border-bottom: #000000 2px solid; /* Added border-bottom property */
  border-right: #000000 2px solid; /* Added border-right property */
}

button.btn-sm {
  font-size: 1.5vmin;
  padding: 1.2vmin 1.6vmin; /* Adjusted padding */
  border-radius: 0.8vmin; /* Adjusted border-radius for square with curve */
}

button.btn-xs {
  font-size: 1vmin;
  padding: 0.8vmin 1vmin; /* Adjusted padding */
  clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%); /* Hexagon shape */
}

button:disabled,
form:invalid button[type="submit"] {
  cursor: not-allowed;
  background-color: var(--tan-4);
  border-radius: 1vmin; /* Adjusted border-radius for square with curve */
}

button[type="submit"] {
  grid-column: span 2;
  margin: 1vmin 0 0;
  border-radius: 1vmin; /* Adjusted border-radius for square with curve */
}

button:hover,
a.button:hover,
button.btn-sm:hover,
button.btn-xs:hover {
  transform: translateY(-0.1vmin); /* Adjusted translateY */
  box-shadow: 0 0.25vmin 0.5vmin rgba(6, 211, 16, 0.842); /* Adjusted box-shadow */
  color: var(--orange);
  background-color: var(--tan-4);
  animation: greenGlow 1s infinite;
  border-radius: 1vmin; /* Adjusted border-radius for square with curve */
}

/* Green glow keyframes */
@keyframes greenGlow {
  0% {
    box-shadow: 0 0 5px rgb(0, 255, 0); /* Adjusted box-shadow */
  }
  100% {
    box-shadow: 0 0 5px rgb(0, 255, 0); /* Adjusted box-shadow */
  }
}


@keyframes greenGlow {
  0% {
    box-shadow: 0 0 5px rgb(0, 255, 0); /* Adjusted box-shadow */
  }
  100% {
    box-shadow: 0 0 5px rgb(0, 255, 0); /* Adjusted box-shadow */
  }
}
